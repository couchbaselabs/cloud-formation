{
	"AWSTemplateFormatVersion": "2010-09-09",
	"Description": "AWS Marketplace Couchbase Stack",
	"Parameters": {
		"VPCCIDR": {
			"Description": "CIDR Block for the VPC you are creating.",
			"Type": "String",
			"Default": "10.0.0.0/16",
			"AllowedPattern": "[a-zA-Z0-9]+\\..+"
		},
		"PublicSubCIDR": {
			"Description": "CIDR Block for the Public DMZ Subnet located in the new VPC.",
			"Type": "String",
			"Default": "10.0.2.0/24",
			"AllowedPattern": "[a-zA-Z0-9]+\\..+"
		},
		"PrivSubCIDR": {
			"Description": "CIDR Block for Private Subnet where Couchbase will be deployed.",
			"Type": "String",
			"Default": "10.0.1.0/24",
			"AllowedPattern": "[a-zA-Z0-9]+\\..+"
		},

		"Admin": {
			"Description": "Name of Couchbase admin user.",
			"Type": "String",
			"Default": "Administrator"
		},

		"Password": {
			"NoEcho": "true",
			"Description": "Password for Admin user.",
			"Type": "String",
			"MinLength": "7",
			"AllowedPattern": "^[a-zA-Z0-9]{6,}"
		},


		"RemoteAccessCIDR": {
			"Description": "IP CIDR from which you are likely to SSH into the CouchbaseNodes instance. WARNING: 0.0.0.0/0 will allow access from anywhere.",
			"Type": "String",
			"MinLength": "9",
			"MaxLength": "18",
			"AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
			"ConstraintDescription": "must be a valid CIDR range of the form x.x.x.x/x."
		},
		"KeyName": {
			"Type": "AWS::EC2::KeyPair::KeyName",
			"Default": "home",
			"Description": "Name of an existing EC2 KeyPair. CouchbaseNodes instance will launch with this KeyPair."
		},
		"CouchbaseInstanceType": {
			"Description": "Amazon EC2 instance type for Couchbase Nodes.",
			"Type": "String",
			"Default": "i2.xlarge",
			"AllowedValues": [
				"r3.large",
				"r3.xlarge",
				"r3.2xlarge",
				"r3.4xlarge",
				"r3.8xlarge",
				"i2.xlarge",
				"i2.2xlarge",
				"i2.4xlarge",
				"i2.8xlarge"

			]
		},

		"CouchbaseServerCount": {
			"Description": "Number of Couchbase Nodes",
			"Type": "String",
			"Default": "3",
			"AllowedValues": [
				"1", "2", "3", "4", "5", "6", "7", "8"
			]
		},


		"AvailabilityZone": {
			"Description": "Pick an AvailabilityZone for Couchbase Subnet",
			"MinLength": "5",
			"Type": "AWS::EC2::AvailabilityZone::Name"
		}
	},


	"Metadata": {
		"AWS::CloudFormation::Interface": {
			"ParameterGroups": [{
				"Label": {
					"default": "Couchbase AWS Infrastructure"
				},
				"Description": {
					"default": ""
				},
				"Parameters": ["KeyPair", "CouchbaseInstanceType", "CouchbaseServerCount"]
			}],
			"ParameterLabels": {

			}
		}
	},

	"Mappings": {
		"DomainNameMapping": {
			"eu-central-1": {
				"NAME": "eu-central-1.compute.internal"
			},
			"sa-east-1": {
				"NAME": "sa-east-1.compute.internal"
			},
			"ap-northeast-1": {
				"NAME": "ap-northeast-1.compute.internal"
			},
			"eu-west-1": {
				"NAME": "eu-west-1.compute.internal"
			},
			"us-east-1": {
				"NAME": "ec2.internal"
			},
			"us-west-1": {
				"NAME": "us-west-1.compute.internal"
			},
			"us-west-2": {
				"NAME": "us-west-2.compute.internal"
			},
			"ap-southeast-2": {
				"NAME": "ap-southeast-2.compute.internal"
			},
			"ap-southeast-1": {
				"NAME": "ap-southeast-1.compute.internal"
			}
		},


		"CouchbaseNodeAMI": {
			"eu-west-1": {
				"AMI": ""
			},
			"ap-southeast-1": {
				"AMI": ""
			},
			"ap-southeast-2": {
				"AMI": ""
			},
			"eu-central-1": {
				"AMI": ""
			},
			"ap-northeast-1": {
				"AMI": ""
			},
			"us-east-1": {
				"AMI": "ami-dbea9ecc"
			},
			"sa-east-1": {
				"AMI": ""
			},
			"us-west-1": {
				"AMI": ""
			},
			"us-west-2": {
				"AMI": ""
			}
		}


	},
	"Outputs": {
		"VPCID": {
			"Description": "VPC-ID of the newly created VPC",
			"Value": {
				"Ref": "VPC"
			}
		},
		"PublicSubnet": {
			"Description": "Subnet-ID of the Public or DMZ Subnet",
			"Value": {
				"Ref": "PublicSubnet"
			}
		},
		"PrivateSubnet": {
			"Description": "Subnet-ID of the Private Subnet where Couchbase Cluster will be deployed",
			"Value": {
				"Ref": "CouchbaseSubnet"
			}
		}
	},
	"Resources": {
		"CouchbaseDHCP": {
			"Type": "AWS::EC2::DHCPOptions",
			"Properties": {
				"DomainName": {
					"Fn::FindInMap": [
						"DomainNameMapping", {
							"Ref": "AWS::Region"
						},
						"NAME"
					]
				},
				"DomainNameServers": [
					"AmazonProvidedDNS"
				],
				"Tags": [{
					"Key": "Name",
					"Value": "CouchbaseDHCP"
				}]
			}
		},
		 "DBPlacementGroup": {
                "Properties": {
                                "Strategy": "cluster"
                            },
                "Type": "AWS::EC2::PlacementGroup"
          },
		"VPC": {
			"Type": "AWS::EC2::VPC",
			"Properties": {
				"CidrBlock": {
					"Ref": "VPCCIDR"
				},
				"EnableDnsHostnames": "true",
				"EnableDnsSupport": "true",
				"Tags": [{
					"Key": "Application",
					"Value": "Couchbase"
				}]
			}
		},
		"CouchbaseVPCDHCPOptionsAssociation": {
			"Type": "AWS::EC2::VPCDHCPOptionsAssociation",
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				},
				"DhcpOptionsId": {
					"Ref": "CouchbaseDHCP"
				}
			}
		},
		"InternetGateway": {
			"Type": "AWS::EC2::InternetGateway"
		},
		"AttachGateway": {
			"Type": "AWS::EC2::VPCGatewayAttachment",
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				},
				"InternetGatewayId": {
					"Ref": "InternetGateway"
				}
			}
		},
		"CouchbaseSubnet": {
			"Type": "AWS::EC2::Subnet",
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				},
				"CidrBlock": {
					"Ref": "PrivSubCIDR"
				},
				"Tags": [{
					"Key": "Application",
					"Value": "Couchbase"
				}, {
					"Key": "Network",
					"Value": "Private (Couchbase)"
				}],
				"AvailabilityZone": {
					"Ref": "AvailabilityZone"
				}
			}
		},
		"PublicSubnet": {
			"Type": "AWS::EC2::Subnet",
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				},
				"CidrBlock": {
					"Ref": "PublicSubCIDR"
				},
				"Tags": [{
					"Key": "Application",
					"Value": "NAT and CouchbaseNodes (Couchbase)"
				}, {
					"Key": "Network",
					"Value": "Public"
				}],
				"AvailabilityZone": {
					"Ref": "AvailabilityZone"
				}
			}
		},
		"CouchbaseNodesSecurityGroup": {
			"Type": "AWS::EC2::SecurityGroup",
			"Properties": {
				"GroupDescription": "CouchbaseNodes Instance security group",
				"VpcId": {
					"Ref": "VPC"
				},
				"SecurityGroupIngress": [{
					"IpProtocol": "tcp",
					"FromPort": "22",
					"ToPort": "22",
					"CidrIp": {
						"Ref": "RemoteAccessCIDR"
					}
				}, {
					"IpProtocol": "udp",
					"FromPort": "123",
					"ToPort": "123",
					"CidrIp": "0.0.0.0/0"
				}, {
					"IpProtocol": "tcp",
					"FromPort": "1",
					"ToPort": "65535",
					"CidrIp": {
						"Ref": "PrivSubCIDR"
					}
				}, {
					"IpProtocol": "tcp",
					"FromPort": "1",
					"ToPort": "65535",
					"CidrIp": {
						"Ref": "PublicSubCIDR"
					}
				}],
				"SecurityGroupEgress": [{
					"IpProtocol": "tcp",
					"FromPort": "1",
					"ToPort": "65535",
					"CidrIp": "0.0.0.0/0"
				}, {
					"IpProtocol": "udp",
					"FromPort": "1",
					"ToPort": "65535",
					"CidrIp": "0.0.0.0/0"
				}]
			}
		},
		"CouchbaseNode0EIP": {
			"Type": "AWS::EC2::EIP",
			"Properties": {
				"Domain": "vpc"
			}
		},
		"CouchbaseNode0Interface": {
			"Type": "AWS::EC2::NetworkInterface",
			"Properties": {
				"SubnetId": {
					"Ref": "PublicSubnet"
				},
				"Description": "Interface for CouchbaseNodes Instance",
				"GroupSet": [{
					"Ref": "CouchbaseNodesSecurityGroup"
				}],
				"SourceDestCheck": "true",
				"Tags": [{
					"Key": "Network",
					"Value": "Public (Couchbase)"
				}]
			}
		},
		"AssociateCouchbaseNode0EIP": {
			"Type": "AWS::EC2::EIPAssociation",
			"Properties": {
				"AllocationId": {
					"Fn::GetAtt": [
						"CouchbaseNode0EIP",
						"AllocationId"
					]
				},
				"NetworkInterfaceId": {
					"Ref": "CouchbaseNode0Interface"
				}
			}
		},

		"CouchbaseNode1EIP": {
			"Type": "AWS::EC2::EIP",
			"Properties": {
				"Domain": "vpc"
			}
		},
		"CouchbaseNode1Interface": {
			"Type": "AWS::EC2::NetworkInterface",
			"Properties": {
				"SubnetId": {
					"Ref": "PublicSubnet"
				},
				"Description": "Interface for CouchbaseNodes Instance",
				"GroupSet": [{
					"Ref": "CouchbaseNodesSecurityGroup"
				}],
				"SourceDestCheck": "true",
				"Tags": [{
					"Key": "Network",
					"Value": "Public (Couchbase)"
				}]
			}
		},
		"AssociateCouchbaseNode1EIP": {
			"Type": "AWS::EC2::EIPAssociation",
			"Properties": {
				"AllocationId": {
					"Fn::GetAtt": [
						"CouchbaseNode1EIP",
						"AllocationId"
					]
				},
				"NetworkInterfaceId": {
					"Ref": "CouchbaseNode1Interface"
				}
			}
		},
		"CouchbaseClusterRouteTable": {
			"Type": "AWS::EC2::RouteTable",
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				},
				"Tags": [{
					"Key": "Application",
					"Value": "Couchbase"
				}]
			}
		},
		"DMZRouteTable": {
			"Type": "AWS::EC2::RouteTable",
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				},
				"Tags": [{
					"Key": "Application",
					"Value": "NAT"
				}]
			}
		},
		"PublicRoute": {
			"Type": "AWS::EC2::Route",
			"Properties": {
				"RouteTableId": {
					"Ref": "DMZRouteTable"
				},
				"DestinationCidrBlock": "0.0.0.0/0",
				"GatewayId": {
					"Ref": "InternetGateway"
				}
			}
		},
		"PublicNetworkAcl": {
			"Type": "AWS::EC2::NetworkAcl",
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				},
				"Tags": [{
					"Key": "Network",
					"Value": "Public"
				}]
			}
		},
		"CouchbaseSubnetRouteTableAssociation": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"Properties": {
				"SubnetId": {
					"Ref": "CouchbaseSubnet"
				},
				"RouteTableId": {
					"Ref": "CouchbaseClusterRouteTable"
				}
			}
		},
		"PublicSubnetRouteTableAssociation": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"Properties": {
				"SubnetId": {
					"Ref": "PublicSubnet"
				},
				"RouteTableId": {
					"Ref": "DMZRouteTable"
				}
			}
		},
		"InboundPublicNetworkAclEntry": {
			"Type": "AWS::EC2::NetworkAclEntry",
			"Properties": {
				"NetworkAclId": {
					"Ref": "PublicNetworkAcl"
				},
				"RuleNumber": "100",
				"Protocol": "6",
				"RuleAction": "allow",
				"Egress": "false",
				"CidrBlock": "0.0.0.0/0",
				"PortRange": {
					"From": "0",
					"To": "65535"
				}
			}
		},
		"OutBoundPublicNetworkAclEntry": {
			"Type": "AWS::EC2::NetworkAclEntry",
			"Properties": {
				"NetworkAclId": {
					"Ref": "PublicNetworkAcl"
				},
				"RuleNumber": "100",
				"Protocol": "6",
				"RuleAction": "allow",
				"Egress": "true",
				"CidrBlock": "0.0.0.0/0",
				"PortRange": {
					"From": "0",
					"To": "65535"
				}
			}
		},
		"CouchbaseNodesInstanceRole": {
			"Type": "AWS::IAM::Role",
			"Properties": {
				"AssumeRolePolicyDocument": {
					"Version": "2012-10-17",
					"Statement": [{
						"Effect": "Allow",
						"Principal": {
							"Service": [
								"ec2.amazonaws.com"
							]
						},
						"Action": [
							"sts:AssumeRole"
						]
					}]
				},
				"Path": "/",
				"Policies": [{
					"PolicyName": "couchbasenode",
					"PolicyDocument": {
						"Version": "2012-10-17",
						"Statement": [{
							"Effect": "Allow",
							"Action": [
								"ec2:Describe*",
								"ec2:AttachNetworkInterface",
								"ec2:AttachVolume",
								"ec2:CreateTags",
								"ec2:CreateVolume",
								"ec2:RunInstances",
								"ec2:StartInstances",
								"ec2:CreateSecurityGroup",
								"ec2:CreatePlacementGroup",
								"ec2:CreateSnapshot"
							],
							"Resource": "*"
						}, {
							"Effect": "Allow",
							"Action": [
								"cloudformation:DescribeStack",
								"cloudformation:ValidateTemplate",
								"cloudformation:DescribeStackEvents",
								"cloudformation:DescribeStackResource",
								"cloudformation:DescribeStackResources",
								"cloudformation:DescribeStacks",
								"autoscaling:DescribeAutoScalingGroups"
							],
							"Resource": [
								"*"
							]
						}]
					}
				}]
			}
		},
		"CouchbaseNodesProfile": {
			"Type": "AWS::IAM::InstanceProfile",
			"Properties": {
				"Path": "/",
				"Roles": [{
					"Ref": "CouchbaseNodesInstanceRole"
				}]
			}
		},

		"AutoScaledInstanceSecurityGroup": {
			"Type": "AWS::EC2::SecurityGroup",
			"Properties": {
				"GroupDescription": "Enable SSH access and port 8091/8093",
				"VpcId": {
					"Ref": "VPC"
				},
				"SecurityGroupIngress": [{
						"IpProtocol": "tcp",
						"FromPort": "22",
						"ToPort": "22",
						"CidrIp": {
							"Ref": "RemoteAccessCIDR"
						}
					}, {
						"IpProtocol": "tcp",
						"FromPort": "8091",
						"ToPort": "8091",
						"CidrIp": {
							"Ref": "RemoteAccessCIDR"
						}
					},

					{
						"IpProtocol": "tcp",
						"FromPort": "11209",
						"ToPort": "11209",
						"CidrIp": {
							"Ref": "RemoteAccessCIDR"
						}
					},

					{
						"IpProtocol": "tcp",
						"FromPort": "11211",
						"ToPort": "11211",
						"CidrIp": {
							"Ref": "RemoteAccessCIDR"
						}
					},

					{
						"IpProtocol": "tcp",
						"FromPort": "21100",
						"ToPort": "21100",
						"CidrIp": {
							"Ref": "RemoteAccessCIDR"
						}
					},

					{
						"IpProtocol": "tcp",
						"FromPort": "21101",
						"ToPort": "21101",
						"CidrIp": {
							"Ref": "RemoteAccessCIDR"
						}
					}, {
						"IpProtocol": "tcp",
						"FromPort": "21299",
						"ToPort": "21299",
						"CidrIp": {
							"Ref": "RemoteAccessCIDR"
						}
					},


					{
						"IpProtocol": "tcp",
						"FromPort": "4369",
						"ToPort": "4369",
						"CidrIp": {
							"Ref": "RemoteAccessCIDR"
						}
					},


					{
						"IpProtocol": "tcp",
						"FromPort": "8093",
						"ToPort": "8093",
						"CidrIp": {
							"Ref": "RemoteAccessCIDR"
						}
					}

				],
				"SecurityGroupEgress": {
					"IpProtocol": "-1",
					"FromPort": "1",
					"ToPort": "65535",
					"CidrIp": "0.0.0.0/0"
				}
			}
		},
		"AutoScaledInstanceLoopSecurityGroup": {
			"Type": "AWS::EC2::SecurityGroup",
			"Properties": {
				"GroupDescription": "Enable all communications within Auto Scaled instances",
				"VpcId": {
					"Ref": "VPC"
				},
				"SecurityGroupIngress": [{
					"IpProtocol": "-1",
					"FromPort": "1",
					"ToPort": "65535",
					"SourceSecurityGroupId": {
						"Ref": "AutoScaledInstanceSecurityGroup"
					}
				}]
			}
		},
       
		"CouchbaseServerGroup": {
			"Type": "AWS::AutoScaling::AutoScalingGroup",
			"Properties": {
				"Tags": [{
					"Key": "Name",
					"Value": "Couchbase Servers",
					"PropagateAtLaunch": "true"
				}],
				"LaunchConfigurationName": {
					"Ref": "CouchbaseServerLaunchConfig"
				},
				"MinSize": {
					"Ref": "CouchbaseServerCount"
				},
				"MaxSize": {
					"Ref": "CouchbaseServerCount"
				},
				"DesiredCapacity": {
					"Ref": "CouchbaseServerCount"
				},
				"VPCZoneIdentifier": [{
					"Ref": "PublicSubnet"
				}],

				"MetricsCollection": [{
					"Granularity": "1Minute",
					"Metrics": [
						"GroupMinSize",
						"GroupMaxSize"
					]
				}],
                "PlacementGroup": {"Ref": "DBPlacementGroup"}
			},
           
			"CreationPolicy": {
				"ResourceSignal": {
					"Timeout": "PT3600M",
					"Count": "1"
				}
			},
			"UpdatePolicy": {
				"AutoScalingRollingUpdate": {
					"MinInstancesInService": "1",
					"MaxBatchSize": "1",
					"PauseTime": "PT15M",
					"WaitOnResourceSignals": "true"
				}
			}
		},

		"CouchbaseServerLaunchConfig": {
			"Type": "AWS::AutoScaling::LaunchConfiguration",
			"Properties": {
				"AssociatePublicIpAddress": "true",
				"EbsOptimized": "false",
				"KeyName": {
					"Ref": "KeyName"
				},

				"ImageId": {
					"Fn::FindInMap": [
						"CouchbaseNodeAMI", {
							"Ref": "AWS::Region"
						},
						"AMI"
					]
				},

				"IamInstanceProfile": {
					"Ref": "CouchbaseNodesProfile"
				},
				"SecurityGroups": [{
					"Ref": "AutoScaledInstanceSecurityGroup"
				}],
				"InstanceType": {
					"Ref": "CouchbaseInstanceType"
				},
				"UserData": {
					"Fn::Base64": {
						"Fn::Join": [
							"", [
								"#!/bin/bash -xe\n",	
								"\n",
								"cd /home/ec2-user",
								"\n",
								"/bin/sh Couchbaseinit.sh ",
								" -u ", {
									"Ref": "Admin"
								},
								" -p ", "'", {
									"Ref": "Password"
								}, "'",
								"\n",

								"/opt/aws/bin/cfn-signal -e $? ",
								"         --stack ", {
									"Ref": "AWS::StackName"
								},
								"         --resource CouchbaseServerGroup ",
								"         --region ", {
									"Ref": "AWS::Region"
								},
								"\n"
							]
						]
					}
				}
			}
		}


	}
}
